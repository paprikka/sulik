.responsive-pulls() when (@pull = false) {}
.responsive-pulls() when (@pull = true) {

/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items over to the left by certain amounts.
 */

/**
 * Not a particularly great selector, but the DRYest way to do things.
 */
[class*="pull--"]{ position:relative; }

.pull-setup(@prefix: 'null') {
  // no access to outer scope
  @p: @prefix;
  @the-prefix: ~`(this.p.toJS() == "'null'")?'':this.p.toJS()`;

  /**
   * Whole
   */
  .pull--@{the-prefix}one-whole {
    right: 100%;
  }

  /**
   * Halves
   */
  .pull--@{the-prefix}one-half, .pull--@{the-prefix}two-quarters, .pull--@{the-prefix}three-sixths, .pull--@{the-prefix}four-eighths, .pull--@{the-prefix}six-twelfths {
    right: 50%;
  }

  /**
   * Thirds
   */
  .pull--@{the-prefix}one-third, .pull--@{the-prefix}two-sixths, .pull--@{the-prefix}four-twelfths {
    right: 33.333%;
  }

  .pull--@{the-prefix}two-thirds, .pull--@{the-prefix}four-sixths, .pull--@{the-prefix}eight-twelfths {
    right: 66.666%;
  }

  /**
   * Quarters
   */
  .pull--@{the-prefix}one-quarter, .pull--@{the-prefix}two-eighths, .pull--@{the-prefix}three-twelfths {
    right: 25%;
  }

  .pull--@{the-prefix}three-quarters, .pull--@{the-prefix}six-eighths, .pull--@{the-prefix}nine-twelfths {
    right: 75%;
  }

  /**
   * Fifths
   */
  .pull--@{the-prefix}one-fifth, .pull--@{the-prefix}two-tenths {
    right: 20%;
  }

  .pull--@{the-prefix}two-fifths, .pull--@{the-prefix}four-tenths {
    right: 40%;
  }

  .pull--@{the-prefix}three-fifths, .pull--@{the-prefix}six-tenths {
    right: 60%;
  }

  .pull--@{the-prefix}four-fifths, .pull--@{the-prefix}eight-tenths {
    right: 80%;
  }

  /**
   * Sixths
   */
  .pull--@{the-prefix}one-sixth, .pull--@{the-prefix}two-twelfths {
    right: 16.666%;
  }

  .pull--@{the-prefix}five-sixths, .pull--@{the-prefix}ten-twelfths {
    right: 83.333%;
  }

  /**
   * Eighths
   */
  .pull--@{the-prefix}one-eighth {
    right: 12.5%;
  }

  .pull--@{the-prefix}three-eighths {
    right: 37.5%;
  }

  .pull--@{the-prefix}five-eighths {
    right: 62.5%;
  }

  .pull--@{the-prefix}seven-eighths {
    right: 87.5%;
  }

  /**
   * Tenths
   */
  .pull--@{the-prefix}one-tenth {
    right: 10%;
  }

  .pull--@{the-prefix}three-tenths {
    right: 30%;
  }

  .pull--@{the-prefix}five-tenths {
    right: 50%;
  }

  .pull--@{the-prefix}seven-tenths {
    right: 70%;
  }

  .pull--@{the-prefix}nine-tenths {
    right: 90%;
  }

  /**
   * Twelfths
   */
  .pull--@{the-prefix}one-twelfth {
    right: 8.333%;
  }

  .pull--@{the-prefix}five-twelfths {
    right: 41.666%;
  }

  .pull--@{the-prefix}seven-twelfths {
    right: 58.333%;
  }

  .pull--@{the-prefix}eleven-twelfths {
    right: 91.666%;
  }
} // .pull-setup(@prefix: 'null') {
.pull-setup();


.palm-pulls() when (@palm-pull = false) {}
.palm-pulls() when (@palm-pull = true) {
  @media only screen and (max-width:~"@{palm-end}px") { /* palm */
    .pull-setup(palm-);
  } // @media palm
} // palm-pull=true mixin


.lap-pulls() when (@lap-pull = false) {}
.lap-pulls() when (@lap-pull = true) {
  @media only screen and (min-width:~"@{lap-start}px") and (max-width:~"@{lap-end}px") { /* lap */
    .pull-setup(lap-);
  } // @media lap
} // lap-pull=true mixin


.lap-and-up-pulls() when (@lap-and-up-pull = false) {}
.lap-and-up-pulls() when (@lap-and-up-pull = true) {
  @media only screen and (min-width:~"@{lap-start}px") { /* lap-and-up */
    .pull-setup(lap-and-up-);
  } // @media lap-and-up
} // lap-and-up-pull=true mixin


.portable-pulls() when (@portable-pull = false) {}
.portable-pulls() when (@portable-pull = true) {
  @media only screen and (max-width:~"@{lap-end}px") { /* portable */
    .pull-setup(portable-);
  } // @media portable
} // portable-pull=true mixin


.desk-pulls() when (@desk-pull = false) {}
.desk-pulls() when (@desk-pull = true) {
  @media only screen and (min-width:~"@{desk-start}px") { /* desk */
    .pull-setup(desk-);
  } // @media desk
} // desk-pull=true mixin

.palm-pulls();
.lap-pulls();
.lap-and-up-pulls();
.portable-pulls();
.desk-pulls();

} // pull=true mixin

.responsive-pulls();